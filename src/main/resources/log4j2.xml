<?xml version="1.0" encoding="UTF-8"?>
<!--Configuration後面的status，這個用於設置log4j2自身內部的信息輸出，可以不設置，當設置成trace時，你會看到log4j2內部各種詳細輸出 -->
<!--monitorInterval：Log4j能夠自動檢測修改配置文件和重新配置本身，設置間隔秒數 -->
<configuration monitorInterval="5">
	<!--日誌級別以及優先級排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->

	<!--變量配置 -->
	<Properties>
		<!-- 格式化輸出：%date表示日期，%thread表示線程名，%-5level：級別從左顯示5個字符寬度 %msg：日誌消息，%n是換行符 -->
		<!-- %logger{36} 表示 Logger 名字最長36個字符 -->
		<property name="LOG_PATTERN"
			value="%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n" />
		<!-- 輸出範例 -->
		<!-- 2023-12-14 13:15:25 [main] FATAL log4jpractice.log4j2Pratice - 致命的訊息 -->
		
		<!-- 定義日誌存儲的路徑，不要配置相對路徑 -->
		<property name="FILE_PATH" value="C:\\Jerry" />
		<property name="FILE_NAME" value="Jerry-log4j2" />
	</Properties>

	<appenders>

		<console name="Console" target="SYSTEM_OUT">
			<!--輸出日誌的格式 -->
			<PatternLayout pattern="${LOG_PATTERN}" />
			<!--控制台只輸出level及其以上級別的信息（onMatch），其他的直接拒絕（onMismatch） -->
			<ThresholdFilter level="info" onMatch="ACCEPT"
				onMismatch="DENY" />
		</console>

		<!--文件會打印出所有信息，這個log每次運行程序會自動清空，由append屬性決定，適合臨時測試用 -->
		<!-- <File name="Filelog" fileName="${FILE_PATH}/test.log" append="false"> -->
		<!-- <PatternLayout pattern="${LOG_PATTERN}"/> -->
		<!-- </File> -->

		<!-- 這個會打印出所有的info及以下級別的信息，每次大小超過size，則這size大小的日誌會自動存入按年份-月份建立的文件夾下面並進行壓縮，作為存檔 -->
		<RollingFile name="RollingFileInfo"
			fileName="${FILE_PATH}/${FILE_NAME}.log"
			filePattern="${FILE_PATH}/${FILE_NAME}-INFO-%d{yyyy-MM-dd}_%i.log.gz">
			<!--控制台只輸出level及以上級別的信息（onMatch），其他的直接拒絕（onMismatch） -->
			<ThresholdFilter level="info" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<!--interval屬性用來指定多久滾動一次，默认是1 hour -->
				<TimeBasedTriggeringPolicy interval="1" />
				<SizeBasedTriggeringPolicy size="10MB" />
			</Policies>
			<!-- DefaultRolloverStrategy屬性如不設置，則默認為最多同一文件夾下7個文件開始覆蓋 -->
			<DefaultRolloverStrategy max="15" />
		</RollingFile>

		<!-- 這個會打印出所有的warn及以下級別的信息，每次大小超過size，則這size大小的日誌會自動存入按年份-月份建立的文件夾下面並進行壓縮，作為存檔 -->
		<!-- <RollingFile name="RollingFileWarn" fileName="${FILE_PATH}/warn.log" 
			filePattern="${FILE_PATH}/${FILE_NAME}-WARN-%d{yyyy-MM-dd}_%i.log.gz"> -->
		<!-- 控制台只輸出level及以上級別的信息（onMatch），其他的直接拒絕（onMismatch） -->
		<!-- <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/> -->
		<!-- <PatternLayout pattern="${LOG_PATTERN}"/> -->
		<!-- <Policies> -->
		<!-- interval屬性用來指定多久滾動一次，默认是1 hour -->
		<!-- <TimeBasedTriggeringPolicy interval="1"/> -->
		<!-- <SizeBasedTriggeringPolicy size="10MB"/> -->
		<!-- </Policies> -->
		<!-- DefaultRolloverStrategy屬性如不設置，則默認為最多同一文件夾下7個文件開始覆蓋 -->
		<!-- <DefaultRolloverStrategy max="15"/> -->
		<!-- </RollingFile> -->

		<!-- 這個會打印出所有的error及以下級別的信息，每次大小超過size，則這size大小的日誌會自動存入按年份-月份建立的文件夾下面並進行壓縮，作為存檔 -->
		<RollingFile name="RollingFileError"
			fileName="${FILE_PATH}/error.log"
			filePattern="${FILE_PATH}/${FILE_NAME}-ERROR-%d{yyyy-MM-dd}_%i.log.gz">
			<!--控制台只輸出level及以上級別的信息（onMatch），其他的直接拒絕（onMismatch） -->
			<ThresholdFilter level="error" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<!--interval屬性用來指定多久滾動一次，默认是1 hour -->
				<TimeBasedTriggeringPolicy interval="1" />
				<SizeBasedTriggeringPolicy size="10MB" />
			</Policies>
			<!-- DefaultRolloverStrategy屬性如不設置，則默認為最多同一文件夾下7個文件開始覆蓋 -->
			<DefaultRolloverStrategy max="15" />
		</RollingFile>

	</appenders>

	<!--Logger節點用來單獨指定日誌的形式，比如要為指定包下的class指定不同的日誌級別等。 -->
	<!--然後定義loggers，只有定義了logger並引入的appender，appender才會生效 -->
	<loggers>

		<!--過濾掉spring和mybatis的一些無用的DEBUG信息 -->
		<logger name="org.mybatis" level="info" additivity="false">
			<AppenderRef ref="Console" />
		</logger>
		<!--監控系統信息 -->
		<!--若是additivity設為false，則 子Logger 只會在自己的appender裡輸出，而不會在 父Logger 的appender裡輸出。 -->
		<Logger name="org.springframework" level="info"
			additivity="false">
			<AppenderRef ref="Console" />
		</Logger>

		<root level="info">
			<appender-ref ref="Console" />
			<!-- <appender-ref ref="Filelog"/> -->
			<appender-ref ref="RollingFileInfo" />
			<!-- <appender-ref ref="RollingFileWarn"/> -->
			<appender-ref ref="RollingFileError" />
		</root>
	</loggers>
</configuration>